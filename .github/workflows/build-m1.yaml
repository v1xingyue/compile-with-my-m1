name: Build and Release for M1

on:
  push:
    tags:
      - 'v*.*.*' # 仅在推送版本标签时触发
  workflow_dispatch: # 支持手动触发
    inputs:
      tag_name:
        description: "The tag name for the release (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"

permissions:
  contents: write # 为 GITHUB_TOKEN 设置写权限以便上传 Release 资产

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: 检出当前仓库代码
      - name: Checkout Current Repository
        uses: actions/checkout@v3

      # Step 2: 安装依赖项，包括 protoc 工具
      - name: Install Dependencies
        run: |
          # 安装 Protocol Buffers 编译器
          brew install protobuf
          
          # 安装 Rust 的目标平台
          rustup target add aarch64-apple-darwin

      # Step 3: 定义目标仓库地址并克隆
      - name: Clone Target Repository
        run: |
          url="https://github.com/your_target_owner/your_target_repo.git"
          git clone $url target-repo

      # Step 4: 构建针对 M1 的二进制文件
      - name: Build Binary for M1
        working-directory: target-repo
        run: |
          cargo build --release --target aarch64-apple-darwin
        env:
          CARGO_INCREMENTAL: 0 # 优化构建性能

      # Step 5: 设置文件权限
      - name: Change Binary Permissions
        run: |
          chmod +x ./target/aarch64-apple-darwin/release/*
        working-directory: target-repo

      # Step 6: 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name || github.ref_name }}
          release_name: Release ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name || github.ref_name }}
          draft: false
          prerelease: false

      # Step 7: 上传二进制文件到 Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target-repo/target/aarch64-apple-darwin/release/*
          asset_name: binary-m1
          asset_content_type: application/octet-stream

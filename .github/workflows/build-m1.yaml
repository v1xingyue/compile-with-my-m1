name: Build and Release for M1

on:
  push:
    tags:
      - 'v*.*.*' # 仅在推送版本标签时触发
  workflow_dispatch: # 支持手动触发

permissions:
  contents: write # 为 GITHUB_TOKEN 设置写权限以便上传 Release 资产

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: 检出当前仓库代码
      - name: Checkout Current Repository
        uses: actions/checkout@v3

      # Step 2: 定义目标仓库地址并克隆
      - name: Clone Target Repository
        run: |
          url="https://github.com/0xobelisk/DubheOS.git"
          git clone $url target-repo

      # Step 3: 安装 Rust 开发环境
      - name: Set Up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # Step 4: 构建针对 M1 的二进制文件
      - name: Build Binary for M1
        working-directory: target-repo
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
        env:
          CARGO_INCREMENTAL: 0 # 优化构建性能

      # Step 5: 设置文件权限
      - name: Change Binary Permissions
        run: |
          chmod +x ./target/aarch64-apple-darwin/release/*
        working-directory: target-repo

      # Step 6: 上传二进制文件到 Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target-repo/target/aarch64-apple-darwin/release/*
          asset_name: binary-m1
          asset_content_type: application/octet-stream
